lib_path = user_folder_path+"/lib"
aptClient_path = lib_path+"/aptclient.so"
metaxploit_path = lib_path+"/metaxploit.so"
crypto_path = lib_path+"/crypto.so"

aptClient = include_lib(aptClient_path)
if aptClient == null then
    home_computer = get_shell("root", root_password).host_computer
    aptClient_file = home_computer.File("/lib/aptclient.so")
    if aptClient_file == null then exit("[gfmauto] Error: Can't find aptclient.so in /lib or "+lib_path)

    lib_file = home_computer.File(lib_path)
    if lib_file == null then home_computer.create_folder(user_folder_path, "lib")

    copy_result = aptClient_file.copy(lib_path, "aptclient.so")
    if not copy_result == 1 then exit("[gfmauto] Error: Can't copy aptclient.so in /lib to "+lib_path)

    aptClient = include_lib(aptClient_path)
end if
if aptClient == null then exit("[gfmauto] Error: Can't find aptclient.so in "+lib_path+" Even though it should")

metaxploit = null
crypto = null

// Updates the aptClient, metaxploit, and crypto libraries by checking for and installing any available upgrades.
// Adds a repository to aptClient, installs missing libraries, and handles errors during the upgrade process.
//
// This function performs the following tasks:
// - Adds a apt-get repository.
// - Checks and installs the `metaxploit.so` and `crypto.so` libraries if they are not present.
// - Checks for upgrades to `aptclient.so`, `metaxploit.so`, and `crypto.so`, and installs upgrades if available.
// - Handles errors that occur during the upgrade and installation process, printing relevant error messages.
//
// Side Effects:
// - May modifies the `aptClient`, `metaxploit`, and `crypto` instance by installing/upgrading libraries.
// - May create or modify files in the specified library path (`lib_path`).
// - May print error messages and exit the program if any issues are encountered during the upgrade process.
//
// @return {void} - This function does not return a value.
update_lib = function()
    aptClient.add_repo(hackShop_ip)
    
    home_computer = get_shell("root", root_password).host_computer
    if home_computer.File(metaxploit_path) == null then aptClient.install("metaxploit.so", lib_path)
    if home_computer.File(crypto_path) == null then aptClient.install("crypto.so", lib_path)

    aptClient_upgrade_result = aptClient.check_upgrade(aptClient_path)
    if typeof(aptClient_upgrade_result) == "string" then; print("[gfmauto] Error: Can't upgrade aptclient.so\n--- Error Info ---\n"+aptClient_upgrade_result+"\n--- End Error Info ---");
    else if aptClient_upgrade_result == null then; print("[gfmauto] Error: Can't upgrade aptclient.so. aptClient.check_upgrade(aptClient_path) return null");
    else if aptClient_upgrade_result == 1 then
        aptClient.install("aptclient.so", lib_path)
        aptClient = include_lib(aptClient_path)
    end if

    metaxploit_upgrade_result = aptClient.check_upgrade(metaxploit_path)
    if typeof(metaxploit_upgrade_result) == "string" then; print("[gfmauto] Error: Can't upgrade metaxploit.so\n--- Error Info ---\n"+metaxploit_upgrade_result+"\n--- End Error Info ---");
    else if metaxploit_upgrade_result == null then; print("[gfmauto] Error: Can't upgrade metaxploit.so. aptClient.check_upgrade(metaxploit_path) return null");
    else if metaxploit_upgrade_result == 1 then
        aptClient.install("metaxploit.so", lib_path)
        metaxploit = include_lib(metaxploit_path)
    end if

    crypto_upgrade_result = aptClient.check_upgrade(crypto_path)
    if typeof(crypto_upgrade_result) == "string" then; print("[gfmauto] Error: Can't upgrade crypto.so\n--- Error Info ---\n"+crypto_upgrade_result+"\n--- End Error Info ---");
    else if crypto_upgrade_result == null then; print("[gfmauto] Error: Can't upgrade crypto.so. aptClient.check_upgrade(crypto_path) return null");
    else if crypto_upgrade_result == 1 then
        aptClient.install("crypto.so", lib_path)
        crypto = include_lib(crypto_path)
    end if
end function

metaxploit = include_lib(metaxploit_path)
if metaxploit == null then update_lib()
if metaxploit == null then exit("[gfmauto] Error: Can't find metaxploit.so in "+lib_path+" Even though it should")

crypto = include_lib(crypto_path)
if crypto == null then update_lib()
if crypto == null then exit("[gfmauto] Error: Can't find crypto.so in "+lib_path+" Even though it should")