autoExploit = {}
autoExploit.cmd = "autoExploit"
autoExploit.alias = "aex"
autoExploit.args = "[-c, -r] [public_ip] (lan_ip)"
autoExploit.desc = "Run exploit on the specify target."

autoExploit.run_shell = function(shell_list)
    if shell_list.len == 0 then return
    for i in range(0, shell_list.len-1)
        shell = shell_list[i]
        
        print("-- [" + i + "] --")
        shell.launch("/bin/whoami")
    end for
    shell_selection = user_input("Select shell: ")
    if not shell_selection then return
    
    shell_selection = shell_selection.to_int
    if shell_selection < 0 or shell_selection >= shell_list.len then return
    
    shell_list[shell_selection].start_terminal
end function

autoExploit.run_computer = function(computer_list)
    if computer_list.len == 0 then return

    for i in range(0, computer_list.len-1)
        computer = computer_list[i]
        print("["+i+"]: "+computer.get_name+" - "+computer.local_ip)
    end for
    computer_selection = user_input("Selection: ")
    if not computer_selection then return

    computer_selection = computer_selection.to_int
    if computer_selection < 0 or computer_selection >= computer_list.len then return

    computer = computer_list[computer_selection]

    while true
        print("[0]: Mail")
        print("[1]: Bank")
        print("[2]: Password")
        print("[3]: Delete file")

        choice_selection = user_input("Choice Selection: ")
        if not choice_selection then break

        choice_selection = choice_selection.to_int

        if choice_selection == 0 then
            home_folder = computer.File("/home")
            access_mail_file(home_folder)
            continue
        else if choice_selection == 1 then
            print("Not Implemented Yet")
            continue
        else if choice_selection == 2 then
            etc_folder = computer.File("/etc")
            access_passwd_file(etc_folder)
        else if choice_selection == 3 then
            is_log_removable = computer.File("/var/system.log").has_permission("w")

            if not is_log_removable then
                continue_input = user_input("Log are not removable! Do you want to continue? [y/n]: ")
                if not continue_input == "y" then
                    print("Aborted!")
                    continue
                end if
            end if

            deleting_file_path = user_input("Deleting file path: ")
            if not deleting_file_path then continue

            deleting_file = computer.File(deleting_file_path)
            if deleting_file == null then
                print("The file/folder doesn't exist!")
                continue
            end if
            deletionResult = deleting_file.delete()
            if typeof(deletionResult) == "string" and deletionResult.len > 0 then
                print("There was an error while deleting a file: " + deletionResult)
            else
                print("File got deleted successfully.")
            end if
        end if
    end while
end function

autoExploit.run_file = function(file_list)
    if file_list.len == 0 then return

    for i in range(0, file_list.len-1)
        file = file_list[i]
        print("["+i+"]: "+file.path)
    end for
    file_selection = user_input("Selection: ")
    if not file_selection then return

    file_selection = file_selection.to_int
    if file_selection < 0 or file_selection >= file_list.len then return

    file = file_list[file_selection]

    while true
        print("[0]: Mail")
        print("[1]: Bank")
        print("[2]: Password")
        print("[3]: Delete file")

        choice_selection = user_input("Choice Selection: ")
        if not choice_selection then break

        choice_selection = choice_selection.to_int

        if choice_selection == 0 then
            home_folder = get_folder(file, "/home")
            access_mail_file(home_folder)
            continue
        else if choice_selection == 1 then
            print("Not Implemented Yet")
            continue
        else if choice_selection == 2 then
            etc_folder = get_folder(file, "/etc")
            access_passwd_file(etc_folder)
        else if choice_selection == 3 then
            var_folder = get_folder(file, "/var")
            log_file = null
            for file in var_folder.get_files
                if file.name == "system.log" then
                    log_file = file
                    break
                end if
            end for
            
            is_log_removable = false
            if log_file == null then
                is_log_removable = false
            else
                is_log_removable = log_file.has_permission("w")
            end if

            if not is_log_removable then
                continue_input = user_input("Log are not removable! Do you want to continue? [y/n]: ")
                if not continue_input == "y" then
                    print("Aborted!")
                    continue
                end if
            end if

            deleting_file_path = user_input("Deleting file path: ")
            if not deleting_file_path then continue

            deleting_file = get_folder(file, deleting_file_path)
            if deleting_file == null then
                print("The file/folder doesn't exist!")
                continue
            end if
            deletionResult = deleting_file.delete()
            if typeof(deletionResult) == "string" and deletionResult.len > 0 then
                print("There was an error while deleting a file: " + deletionResult)
            else
                print("File got deleted successfully.")
            end if
        end if
    end while
end function

autoExploit.run = function(args)
    if args.len < 1 then exit("Invalid argument!")

    flag = args[0]

    if flag == "-c" then
        if args.len < 3 then exit("Invalid argument!")
        result = get_result_list(get_remote_metaLib_list(args[1], args[2]))

        autoExploit.run_shell_list(result["shell"])
        computer_memory_exploit_map_list = result["computer"]
        file_memory_exploit_map_list = result["file"]
        change_password_map_list = result["password"]


    else if flag == "-r" then
        if args.len < 2 then exit("Invalid argument!")
    else
        exit("Invalid argument!")
    end if
end function


autoExploit.run_shell_list = function(shell_memory_exploit_map_list)
    if shell_memory_exploit_map_list.len == 0 then return
    for i in range(0, shell_memory_exploit_map_list.len-1)
        shell_memory_exploit_map = shell_memory_exploit_map_list[i]
        shell = shell_memory_exploit_map["shell"]

        print("-- ["+i+"] --")
        shell.launch("/bin/whoami") // TODO: Too lazy to create a script for whoami rn so I just use the default cmd
    end for
    shell_selection = user_input("Select shell: ").to_int
    if typeof(shell_selection) == "string" then return
    if shell_selection < 0 or shell_selection >= shell_memory_exploit_map_list.len then return
    
    selected_shell = shell_memory_exploit_map_list[shell_selection]["shell"]
    selected_memory_exploit_map = shell_memory_exploit_map_list[shell_selection]["memory_exploit_map"]

    print("[0]: Launch terminal")
    print("[1]: Corrupt log")

    // TODO: Implement the thing
end function

autoExploit.run_computer_list = function(computer_memory_exploit_map_list)
    if computer_memory_exploit_map_list.len == 0 then return
    for i in range(0, computer_memory_exploit_map_list.len-1)
        computer_memory_exploit_map = computer_memory_exploit_map_list[i]
        computer = computer_memory_exploit_map["computer"]

        print("-- ["+i+"] --")
        print(computer.get_name) // TODO: Make this better somehow
    end for
    computer_selection = user_input("Select computer: ").to_int
    if typeof(computer_selection) == "string" then return
    if computer_selection < 0 or computer_selection >= computer_memory_exploit_map_list.len then return
    
    selected_computer = computer_memory_exploit_map_list[computer_selection]["computer"]
    selected_memory_exploit_map = computer_memory_exploit_map_list[computer_selection]["memory_exploit_map"]

    print("[0]: show_procs")
    print("[1]: close_program")
    print("[2]: change_password")

    // TODO: Implement the thing
end function

autoExploit.run_file_list = function(file_memory_exploit_map_list)
    if file_memory_exploit_map_list.len == 0 then return
    for i in range(0, file_memory_exploit_map_list.len-1)
        file_memory_exploit_map = file_memory_exploit_map_list[i]
        file = file_memory_exploit_map["computer"]

        print("-- ["+i+"] --")
        print(file.path) // TODO: Make this better somehow
    end for
    file_selection = user_input("Select file: ").to_int
    if typeof(file_selection) == "string" then return
    if file_selection < 0 or file_selection >= file_memory_exploit_map_list.len then return
    
    selected_file = file_memory_exploit_map_list[file_selection]["file"]
    selected_memory_exploit_map = file_memory_exploit_map_list[file_selection]["memory_exploit_map"]

    // TODO: Implement the thing
end function