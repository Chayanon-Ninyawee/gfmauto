import_code("config.src")
import_code("constants.src")
import_code("functions/utils.src")
import_code("functions/AES128.src")

import_code("functions/lib_manager.src")
import_code("functions/config_manager.src")
import_code("functions/mail_manager.src")
import_code("functions/metaLib_database.src")
import_code("functions/metaLib_manager.src")
import_code("functions/script_launcher.src")
import_code("functions/script_installer.src")

import_code("commands/autohack.src")
import_code("commands/corruptlog.src")
import_code("commands/initsecureshell.src")
import_code("commands/modproxy.src")
import_code("commands/conproxy.src")

command_list = [autohack, corruptlog, initsecureshell, conproxy]

cmd_list = []
alias_list = []
help_info = ""
for command in command_list
    cmd_list.push(command.cmd)
    if command.alias == null then; alias_list.push("")
    else; alias_list.push(command.alias); end if
    
     help_info = help_info+command.cmd
    if not command.args == null then help_info = help_info+" "+command.args
    if not command.desc == null then help_info = help_info+" - "+command.desc
    help_info = help_info+char(10)
end for

if params.len == 0 then exit(help_info)

command_index = null

cmd_list_index = cmd_list.indexOf(params[0])
if not cmd_list_index == null then command_index = cmd_list_index

alias_list_index = alias_list.indexOf(params[0])
if not alias_list_index == null then command_index = alias_list_index

if command_index == null then exit(help_info)

command_list[command_index].run(params[1:])